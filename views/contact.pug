extends layout

block styles
  link(rel='stylesheet', href='/stylesheets/contacts.css')
  link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css')

block content
  .page-header
    h1 Contacts
    .page-actions
      button.btn.btn-primary(onclick="document.getElementById('addContactForm').style.display='block'")
        i.fas.fa-user-plus.mr-1
        | Add Contact
      button.btn.btn-outline-primary(onclick="document.getElementById('importForm').style.display='block'")
        i.fas.fa-file-import.mr-1
        | Import
      
  // Bulk Actions Bar
  .bulk-actions-bar#bulkActionsBar
    .selected-count
      span#selectedCount 0
      |  contacts selected
    .bulk-actions
      button.btn.btn-danger(onclick="confirmDeleteSelected()")
        i.fas.fa-trash.mr-1
        | Delete Selected

  // Export Buttons
  .export-buttons
    a.btn.btn-outline-primary(href='/contacts/export/json')
      i.fas.fa-file-code.mr-1
      | Export as JSON
    a.btn.btn-outline-primary(href='/contacts/export/csv')
      i.fas.fa-file-csv.mr-1
      | Export as CSV
    a.btn.btn-outline-primary(href='/contacts/export/excel')
      i.fas.fa-file-excel.mr-1
      | Export as Excel

  // Add Contact Form
  .add-contact-form#addContactForm(style="display:none")
    h3 Add New Contact
    form(action="/contacts/add" method="post" onsubmit="return validateAddContact()")
      .form-grid
        .form-group
          label(for="name") Name
          input.form-control(type="text" name="name" id="name")
        .form-group
          label(for="surname") Surname
          input.form-control(type="text" name="surname" id="surname")
        .form-group
          label(for="phoneNumber") Phone Number *
          input.form-control(type="text" name="phoneNumber" id="addPhoneNumber" required)
          span.error-message#addPhoneNumberWarning Please provide a phone number!
        .form-group
          label(for="email") Email
          input.form-control(type="email" name="email" id="email")
        .form-group
          label(for="birthday") Birthday
          input.form-control(type="date" name="birthday" id="birthday")
      .form-footer
        button.btn.btn-outline-secondary(type="button" onclick="document.getElementById('addContactForm').style.display='none'") Cancel
        button.btn.btn-primary(type="submit") Add Contact

  // File Upload Form
  .file-upload-container#importForm(style="display:none")
    h3.file-upload-title Import Contacts
    form.file-upload-form(action="/contacts/import" method="post" enctype="multipart/form-data")
      .file-input-wrapper
        label.file-upload-label(for="file") 
          i.fas.fa-cloud-upload-alt.mr-1
          | Choose a file (CSV, JSON, or Excel)
        input.file-upload-input(type="file" name="file" id="file" required)
      button.btn.btn-primary(type="submit") Import
      button.btn.btn-outline-secondary(type="button" onclick="document.getElementById('importForm').style.display='none'") Cancel

  // Contacts Table
  .contacts-table-container
    table.contacts-table
      thead
        tr
          th.checkbox-cell
            input(type="checkbox" id="selectAll" onchange="toggleSelectAll()")
          th Name
          th Surname
          th Phone Number
          th Email
          th Birthday
          th Source
          th Actions
      tbody
        each contact in contacts
          tr
            td.checkbox-cell
              input(type="checkbox" name="selectedContacts" value=contact.id onchange="updateSelectedCount()")
            td= contact.name || '--'
            td= contact.surname || '--'
            td= contact.phoneNumber
            td= contact.email || '--'
            td= contact.birthday ? new Date(contact.birthday).toLocaleDateString() : '--'
            td= contact.source || '--'
            td
              .contact-actions
                a.btn.btn-outline-primary.btn-sm(href=`/contacts/edit/${contact.id}` title="Edit")
                  i.fas.fa-edit
                button.btn.btn-outline-danger.btn-sm(onclick=`confirmDelete(${contact.id})` title="Delete")
                  i.fas.fa-trash-alt

block scripts
  script.
    function confirmDelete(contactId) {
      if (confirm('Are you sure you want to delete this contact?')) {
        window.location.href = `/contacts/delete/${contactId}`;
      }
    }

    function confirmDeleteSelected() {
      const selected = Array.from(document.querySelectorAll('input[name="selectedContacts"]:checked'))
        .map(checkbox => checkbox.value);
      if (selected.length === 0) {
        alert('Please select at least one contact to delete.');
        return;
      }
      if (confirm(`Are you sure you want to delete ${selected.length} selected contacts?`)) {
        fetch('/contacts/delete-multiple', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ ids: selected })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            window.location.reload();
          } else {
            alert('Error deleting contacts');
          }
        })
        .catch(error => console.error('Error:', error));
      }
    }

    function validateAddContact() {
      const phoneNumberInput = document.getElementById('addPhoneNumber');
      const phoneNumberWarning = document.getElementById('addPhoneNumberWarning');
      if (!phoneNumberInput.value) {
        phoneNumberInput.classList.add('error');
        phoneNumberWarning.style.display = 'block';
        return false; // Prevent form submission
      } else {
        phoneNumberInput.classList.remove('error');
        phoneNumberWarning.style.display = 'none';
      }
      return true; // Allow form submission
    }

    function toggleSelectAll() {
      const selectAll = document.getElementById('selectAll');
      const checkboxes = document.querySelectorAll('input[name="selectedContacts"]');
      checkboxes.forEach(checkbox => checkbox.checked = selectAll.checked);
      updateSelectedCount();
    }

    function updateSelectedCount() {
      const selected = document.querySelectorAll('input[name="selectedContacts"]:checked').length;
      document.getElementById('selectedCount').textContent = selected;
      const bulkActionsBar = document.getElementById('bulkActionsBar');
      if (selected > 0) {
        bulkActionsBar.classList.add('active');
      } else {
        bulkActionsBar.classList.remove('active');
      }
    }

    // Initialize file input display
    document.getElementById('file').addEventListener('change', function(e) {
      const fileName = e.target.files[0]?.name || 'Choose a file';
      document.querySelector('.file-upload-label').textContent = fileName;
    }); 